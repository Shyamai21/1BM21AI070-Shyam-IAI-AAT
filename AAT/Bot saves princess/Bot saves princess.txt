def displayPathtoPrincess(N, grid):
    # Find the positions of 'm' (bot) and 'p' (princess)
    for i in range(N):
        for j in range(N):
            if grid[i][j] == 'm':
                bot_pos = (i, j)
            elif grid[i][j] == 'p':
                princess_pos = (i, j)

    # Calculate the difference between bot and princess positions
    delta_x = princess_pos[0] - bot_pos[0]
    delta_y = princess_pos[1] - bot_pos[1]

    # Generate the moves to reach the princess
    moves = []

    if delta_x > 0:
        moves.extend(['DOWN'] * delta_x)
    elif delta_x < 0:
        moves.extend(['UP'] * abs(delta_x))

    if delta_y > 0:
        moves.extend(['RIGHT'] * delta_y)
    elif delta_y < 0:
        moves.extend(['LEFT'] * abs(delta_y))

    # Print the moves line by line
    for move in moves:
        print(move)

# Sample input
N = 3
grid = [
    "---",
    "-m-",
    "p--"
]

# Call the function to rescue Princess Peach
displayPathtoPrincess(N, grid)
